version: '3.8'
services:
  redis:
    image: 'redis:alpine'
    container_name: 'redis'
    command: ['redis-server', '--bind', 'redis', '--port', '6379']
    ports:
      - 6379:6379
    environment:
      - REDIS_REPLICATION_MODE=master

  server-api:
    tty: true
    container_name: 'server-api'
    depends_on:
      - redis
    env_file:
      - .env
    build:
      context: ./server-api
      dockerfile: Dockerfile
    ports:
      - $PORT_API:$PORT_API
    restart: 'unless-stopped'
    volumes:
      - ./firebaseConfig.json:/server/src/firebaseConfig.json

  server-device:
    tty: true
    container_name: 'server-device'
    depends_on:
      - redis
      - server-api
    env_file:
      - .env
    build:
      context: ./server-device
      dockerfile: Dockerfile
    ports:
      - $PORT_DEVICE:$PORT_DEVICE
    restart: 'unless-stopped'
    volumes:
      - ./firebaseConfig.json:/server/src/firebaseConfig.json

  server-client:
    tty: true
    container_name: 'server-client'
    depends_on:
      - redis
      - server-device
    env_file:
      - .env
    build:
      context: ./server-client
      dockerfile: Dockerfile
    ports:
      - $PORT_CLIENT:$PORT_CLIENT
    restart: 'unless-stopped'
    volumes:
      - ./firebaseConfig.json:/server/src/firebaseConfig.json

  nginx:
    tty: true
    container_name: 'nginx'
    build:
      context: ./nginx
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - 80:80
      - 443:443
    restart: 'unless-stopped'
    volumes:
      - ./nginx/certs/cert.pem:/etc/ssl/nginx/cert.pem
      - ./nginx/certs/key.pem:/etc/ssl/nginx/key.pem
