version: '3.8'
services:
  emqx:
    image: 'emqx/emqx'
    container_name: 'emqx'
    environment:
      - EMQX_NAME=emqx
      - EMQX_ALLOW_ANONYMOUS=false
      - EMQX_LISTENER__SSL__EXTERNAL=8883
      - EMQX_LISTENER__SSL__EXTERNAL__KEYFILE=etc/certs/key.pem
      - EMQX_LISTENER__SSL__EXTERNAL__CERTFILE=etc/certs/cert.pem

      - EMQX_LOADED_PLUGINS=emqx_auth_http,emqx_management,emqx_recon,emqx_retainer,emqx_dashboard
    ports:
      - 1883:1883 # MQTT
      - 8883:8883 # MQTT/SSL
      - 8083:8083 # MQTT/WS
      - 8084:8084 # MQTT/WSS
      - 18083:18083 # DASHBOARD
    volumes:
      - ./emqx/plugins:/opt/emqx/etc/plugins
      - ./certs:/opt/emqx/etc/certs

    networks:
      - backend

  server-api:
    tty: true
    container_name: 'server_api'
    command: npm run start
    env_file:
      - .env
    build:
      context: ./server_api
      dockerfile: Dockerfile
    ports:
      - $PORT_API:$PORT_API
    restart: 'unless-stopped'
    volumes:
      - ./firebaseConfig.json:/server/firebaseConfig.json
      - ./server_api/src:/server/src
      - ./server_api/bin:/server/bin
    networks:
      - backend

  nginx:
    tty: true
    container_name: 'nginx'
    build:
      context: ./nginx
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - 80:80
      - 443:443
    restart: 'unless-stopped'
    volumes:
      - ./certs:/etc/ssl/nginx/certs
      - ./nginx/certs/cert.pem:/etc/ssl/nginx/cert.pem
      - ./nginx/certs/key.pem:/etc/ssl/nginx/key.pem
    networks:
      - backend

networks:
  backend:
