rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function getUser() {
    	return get(/databases/$(database)/documents/users/$(request.auth.uid)); 
		}
  	function isDeviceReadAllowed(deviceUid) {
    	return 
      {"uid": deviceUid, "read": true, "write": true, "execute": true } in getUser().data.devices ||
      {"uid": deviceUid, "read": true, "write": true, "execute": false } in getUser().data.devices ||
      {"uid": deviceUid, "read": true, "write": false, "execute": true } in getUser().data.devices ||
      {"uid": deviceUid, "read": true, "write": false, "execute": false } in getUser().data.devices;
      
    }
    function isDeviceWriteAllowed(deviceUid) {
    	return 
      {"uid": deviceUid, "read": true, "write": true, "execute": true } in getUser().data.devices ||
      {"uid": deviceUid, "read": true, "write": true, "execute": false } in getUser().data.devices ||
      {"uid": deviceUid, "read": false, "write": true, "execute": true } in getUser().data.devices ||
      {"uid": deviceUid, "read": false, "write": true, "execute": false } in getUser().data.devices;
    }
    
  	match /users/{userId} {
			allow read: 
      	if request.auth != null && request.auth.uid == userId;

      allow update: 
      	if request.auth != null && getUser().data.role == "admin";
    }
    
    
    match /devices/{deviceUid} {
			allow read: 
      	if request.auth != null 
      	&& getUser().data.role == "admin" 
        || isDeviceReadAllowed(deviceUid);
        
      allow write: 
      	if request.auth != null
        && getUser().data.role == "admin"
        || isDeviceWriteAllowed(deviceUid);
        
    }
  
    
    match /{path=**}/history/{history} {
      allow read: 
      	if request.auth != null 
      	&& getUser().data.role == "admin" 
        || isDeviceReadAllowed(resource.data.destination.deviceUid);
    }
    
    
    match /devices-private/{deviceId} {
			allow create: 
      	if request.auth != null 
        && getUser().data.role == "admin" 
        && request.resource.data.secret != null;
        
			allow delete: 
      	if request.auth != null 
      	&& getUser().data.role == "admin";
    }
  }
}