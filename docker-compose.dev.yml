version: '3.8'
services:
  emqx:
    image: 'emqx/emqx'
    container_name: 'emqx'
    env_file:
      - .env
    environment:
      - EMQX_NAME=emqx
      - EMQX_LOG__LEVEL=debug
      - EMQX_ALLOW_ANONYMOUS=false

      - EMQX_LOADED_PLUGINS=emqx_auth_http,emqx_web_hook,emqx_management,emqx_recon,emqx_retainer,emqx_dashboard
    ports:
      - 1883:1883 # MQTT
      - 8083:8083 # MQTT/WS
      - 18083:18083 # Dashboard
    volumes:
      - ./emqx/plugins:/opt/emqx/etc/plugins
    networks:
      - backend

  webhooks:
    tty: true
    container_name: 'webhooks'
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/app/firebaseConfig.json
    env_file:
      - .env
    build:
      context: ./webhooks
      dockerfile: Dockerfile
    volumes:
      - ./firebaseConfig.json:/app/firebaseConfig.json
    networks:
      - backend
  device_api:
    tty: true
    container_name: 'device_api'
    command: npm run start:dev
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/app/firebaseConfig.json
    env_file:
      - .env
    depends_on:
      - 'emqx'
    build:
      context: ./device_api
      dockerfile: Dockerfile
    volumes:
      - ./device_api/src/:/app/src/
      - ./firebaseConfig.json:/app/firebaseConfig.json
    networks:
      - backend

  auth:
    tty: true
    container_name: 'auth'
    command: npm run start
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/app/firebaseConfig.json
    env_file:
      - .env
    build:
      context: ./auth
      dockerfile: Dockerfile
    volumes:
      - ./firebaseConfig.json:/app/firebaseConfig.json
    networks:
      - backend

  # ota:
  #   tty: true
  #   container_name: 'ota'
  #   # command: npm run start
  #   environment:
  #     - GOOGLE_APPLICATION_CREDENTIALS=/app/firebaseConfig.json
  #   entrypoint: ['echo', 'Service ota is disabled']
  #   env_file:
  #     - .env
  #   build:
  #     context: ./ota
  #     dockerfile: Dockerfile
  #   # restart: 'unless-stopped'
  #   volumes:
  #     - ./firebaseConfig.json:/app/firebaseConfig.json
  #   networks:
  #     - backend

  nginx:
    tty: true
    container_name: 'nginx'
    build:
      context: ./nginx
      dockerfile: Dockerfile.dev
    env_file:
      - .env
    ports:
      - 80:80
      - 443:443
    restart: 'unless-stopped'
    networks:
      - backend

networks:
  backend:
